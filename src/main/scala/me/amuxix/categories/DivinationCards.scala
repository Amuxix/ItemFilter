package me.amuxix.categories

import me.amuxix.actions.Action
import me.amuxix.actions.Color._
import me.amuxix.actions.Sound._
import me.amuxix.conditions.Condition
import me.amuxix.{Block, FilterLevel}

object DivinationCards extends Category {
  // Worth at least 30c in standard
  val t0 = Block(
    Condition(
      base = Seq(
        "House of Mirrors",
        "The Doctor",
        "The Fiend",
        "Mawr Blaidd",
        "The Immortal",
        "The Spark and the Flame",
        "Hunter's Reward",
        "The Wolven King's Bite",
        "The Iron Bard",
        "The Queen",
        "Abandoned Wealth",
      ),
      `class` = "Divination",
    ),
    Action(
      size = 45,
      sound = myths.quieter,
      backgroundColor = divinationBlue,
      textColor = black,
      borderColor = black,
    )
  )

  // Worth at least 5c in standard
  val t1 = Block(
    Condition(
      base = Seq(
        "The Vast",
        "Time-Lost Relic",
        "The Saint's Treasure",
        "The World Eater",
        "The Dragon's Heart",
        "The Last One Standing",
        "Wealth and Power",
        "The Wind",
        "The Sephirot",
        "The Valkyrie",
        "The Artist",
        "Blessing of God",
        "The Thaumaturgist",
        "Heterochromia",
        "Pride Before the Fall",
        "Last Hope",
        "The Wolf",
        "The King's Heart",
        "The Dreamer",
        "Bowyer's Dream",
        "The Hoarder",
        "The Brittle Emperor",
        "The Void",
        "The Celestial Justicar",
        "The Standoff",
        "The Enlightened",
        "The Risk",
        "The Formless Sea",
        "The Hunger",
        "The Polymath",
        "Left to Fate",
        "The Breach",
      ),
      `class` = "Divination",
    ),
    Action(
      size = 40,
      sound = epic.quieter,
      backgroundColor = divinationBlue.darken,
      textColor = black,
      borderColor = black,
    )
  )

  // Worth more than 1c in standard
  val t2 = Block(
    Condition(
      base = Seq(
        "The Valley of Steel Boxes",
        "Rebirth",
        "Lucky Deck",
        "The Dark Mage",
        "The Porcupine",
        "The Jester",
        "The Ethereal",
        "The Dapper Prodigy",
        "The Road to Power",
        "The Insatiable",
        "The Tyrant",
        "Emperor of Purity",
        "Humility",
        "Lingering Remnants",
        "The Chains that Bind",
        "The Obscured",
        "The Offering",
        "The Warlord",
        "The Wretched",
        "The Surveyor",
        "Merciless Armament",
      ),
      `class` = "Divination",
    ),
    Action(
      size = 36,
      sound = divCards,
      backgroundColor = black,
      textColor = divinationBlue,
      borderColor = divinationBlue,
    )
  )

  // Worth 1c in standard
  val t3 = Block(
    Condition(
      base = Seq(
        "The Soul",
        "Atziri's Arsenal",
        "Audacity",
        "Blind Venture",
        "Boundless Realms",
        "Coveted Possession",
        "Dialla's Subjugation",
        "Earth Drinker",
        "Emperor's Luck",
        "Gemcutter's Promise",
        "Glimmer of Hope",
        "Hope",
        "Hubris",
        "Hunter's Resolve",
        "Jack in the Box",
        "Lost Worlds",
        "Lucky Connections",
        "Lysah's Respite",
        "Mitts",
        "No Traces",
        "Rats",
        "Scholar of the Seas",
        "Shard of Fate",
        "The Aesthete",
        "The Arena Champion",
        "The Avenger",
        "The Battle Born",
        "The Blazing Fire",
        "The Body",
        "The Calling",
        "The Cataclysm",
        "The Conduit",
        "The Cursed King",
        "The Demoness",
        "The Doppelganger",
        "The Dragon",
        "The Encroaching Darkness",
        "The Explorer",
        "The Eye of the Dragon",
        "The Fletcher",
        "The Forsaken",
        "The Fox",
        "The Garish Power",
        "The Harvester",
        "The Inoculated",
        "The Inventor",
        "The Lion",
        "The Lord in Black",
        "The Mercenary",
        "The Oath",
        "The One With All",
        "The Pact",
        "The Penitent",
        "The Poet",
        "The Realm",
        "The Sigil",
        "The Siren",
        "The Stormcaller",
        "The Sun",
        "The Survivalist",
        "The Throne",
        "The Traitor",
        "The Trial",
        "The Union",
        "The Visionary",
        "The Wolverine",
        "The Wrath",
        "Treasure Hunter",
        "Vinia's Token",
        "Volatile Power",
        "The Drunken Aristocrat",
        "Doedre's Madness",
        "Birth of the Three",
        "The Puzzle",
        "The Scavenger",
        "Gift of the Gemling Queen",
        "The Watcher",
        "The Spoiled Prince",
        "Call to the First Ones",
        "Three Faces in the Dark",
        "Turn the Other Cheek",
        "Grave Knowledge",
        "The Endurance",
        "Light and Truth",
        "Might is Right",
        "The Gambler",
        "The Gentleman",
        "Loyalty",
        "The Web",
        "The Deceiver",
        "Tranquillity",
        "The Pack Leader",
        "Anarchy's Price",
        "The Coming Storm",
        "The Summoner",
        "Her Mask",
        "The Gladiator",
        "The Lich",
        "The Ruthless Ceinture",
        "A Mother's Parting Gift",
        "Forbidden Power",
        "Prosperity",
        "The Metalsmith's Gift",
        "Assassin's Favour",
        "Cartographer's Delight",
        "Death",
        "Destined to Crumble",
        "Dying Anguish",
        "Lantador's Lost Love",
        "Rain Tempter",
        "Rain of Chaos",
        "Struck by Lightning",
        "The Betrayal",
        "The Catalyst",
        "The Feast",
        "The Flora's Gift",
        "The Gemcutter",
        "The Hermit",
        "The Incantation",
        "The King's Blade",
        "The Lover",
        "The Lunaris Priestess",
        "The Opulent",
        "The Rabid Rhoa",
        "The Scarred Meadow",
        "The Scholar",
        "The Surgeon",
        "The Tower",
        "The Twins",
        "The Warden",
        "The Wolf's Shadow",
        "Thunderous Skies",
        "The Carrion Crow",
      ),
      `class` = "Divination",
    ),
    Action(
      size = 36,
      sound = divCards.quieter,
      backgroundColor = black,
      textColor = divinationBlue.darken,
      borderColor = divinationBlue.darken,
    )
  )

  //So bad they should be hidden
  val crapTier = Block(
    Condition(
      `class` = "Divination",
      base = Seq("Thunderous Skies", "The Carrion Crow")
    ),
    Action(
      backgroundColor = black,
      textColor = divinationBlue,
    )
  )

  val rest = Block(
    Condition(
      `class` = "Divination",
    ),
    Action(
      backgroundColor = black,
      textColor = divinationBlue,
    )
  )

  override def categoryBlocks(filterLevel: FilterLevel) = Seq(t0, t1, t2, t3, crapTier.hidden, rest)
}
