package me.amuxix.items.bases.armour
import me.amuxix.items.FilterClass
import me.amuxix.items.bases.Armour

sealed abstract class Shield(dropLevel: Int) extends Armour(2, 2, dropLevel, "Shield")

object Shield extends FilterClass[Shield] {
  // format: off
  val armourShields: Seq[Shield] = Seq(SplinteredTowerShield, CorrodedTowerShield, RawhideTowerShield, CedarTowerShield, CopperTowerShield, ReinforcedTowerShield, PaintedTowerShield, BuckskinTowerShield, MahoganyTowerShield, BronzeTowerShield, GirdedTowerShield, CrestedTowerShield, ShagreenTowerShield, EbonyTowerShield, EzomyteTowerShield, ColossalTowerShield, PinnacleTowerShield)
  val evasionShields: Seq[Shield] = Seq(GoathideBuckler, PineBuckler, PaintedBuckler, HammeredBuckler, WarBuckler, GildedBuckler, OakBuckler, EnameledBuckler, CorrugatedBuckler, BattleBuckler, GoldenBuckler, IronwoodBuckler, LacqueredBuckler, VaalBuckler, CrusaderBuckler, ImperialBuckler)
  val energyShieldShields: Seq[Shield] = Seq(TwigSpiritShield, YewSpiritShield, BoneSpiritShield, TarnishedSpiritShield, JinglingSpiritShield, BrassSpiritShield, WalnutSpiritShield, IvorySpiritShield, AncientSpiritShield, ChimingSpiritShield, ThoriumSpiritShield, LacewoodSpiritShield, FossilisedSpiritShield, VaalSpiritShield, HarmonicSpiritShield, TitaniumSpiritShield)
  val armourEvasionShields: Seq[Shield] = Seq(RottedRoundShield, FirRoundShield, StuddedRoundShield, ScarletRoundShield, SplendidRoundShield, MapleRoundShield, SpikedRoundShield, CrimsonRoundShield, BaroqueRoundShield, TeakRoundShield, SpinyRoundShield, CardinalRoundShield, ElegantRoundShield)
  val armourEnergyShieldShields: Seq[Shield] = Seq(PlankKiteShield, LindenKiteShield, ReinforcedKiteShield, LayeredKiteShield, CeremonialKiteShield, EtchedKiteShield, SteelKiteShield, LaminatedKiteShield, AngelicKiteShield, BrandedKiteShield, ChampionKiteShield, MosaicKiteShield, ArchonKiteShield)
  val evasionEnergyShieldShields: Seq[Shield] = Seq(SpikedBundle, DriftwoodSpikedShield, AlloyedSpikedShield, BurnishedSpikedShield, OrnateSpikedShield, RedwoodSpikedShield, CompoundSpikedShield, PolishedSpikedShield, SovereignSpikedShield, AlderSpikedShield, EzomyteSpikedShield, MirroredSpikedShield, SupremeSpikedShield)
  val shields: Seq[Seq[Shield]] = Seq(armourShields, evasionShields, energyShieldShields, armourEvasionShields, armourEnergyShieldShields, evasionEnergyShieldShields)
  // format: on
  override val all: Seq[Shield] = shields.flatten
}

//Armour
case object SplinteredTowerShield extends Shield(dropLevel = 1)
case object CorrodedTowerShield extends Shield(dropLevel = 5)
case object RawhideTowerShield extends Shield(dropLevel = 11)
case object CedarTowerShield extends Shield(dropLevel = 17)
case object CopperTowerShield extends Shield(dropLevel = 24)
case object ReinforcedTowerShield extends Shield(dropLevel = 30)
case object PaintedTowerShield extends Shield(dropLevel = 35)
case object BuckskinTowerShield extends Shield(dropLevel = 39)
case object MahoganyTowerShield extends Shield(dropLevel = 43)
case object BronzeTowerShield extends Shield(dropLevel = 47)
case object GirdedTowerShield extends Shield(dropLevel = 51)
case object CrestedTowerShield extends Shield(dropLevel = 55)
case object ShagreenTowerShield extends Shield(dropLevel = 58)
case object EbonyTowerShield extends Shield(dropLevel = 61)
case object EzomyteTowerShield extends Shield(dropLevel = 64)
case object ColossalTowerShield extends Shield(dropLevel = 67)
case object PinnacleTowerShield extends Shield(dropLevel = 70)

//Evasion
case object GoathideBuckler extends Shield(dropLevel = 2)
case object PineBuckler extends Shield(dropLevel = 8)
case object PaintedBuckler extends Shield(dropLevel = 16)
case object HammeredBuckler extends Shield(dropLevel = 23)
case object WarBuckler extends Shield(dropLevel = 29)
case object GildedBuckler extends Shield(dropLevel = 34)
case object OakBuckler extends Shield(dropLevel = 38)
case object EnameledBuckler extends Shield(dropLevel = 42)
case object CorrugatedBuckler extends Shield(dropLevel = 46)
case object BattleBuckler extends Shield(dropLevel = 50)
case object GoldenBuckler extends Shield(dropLevel = 54)
case object IronwoodBuckler extends Shield(dropLevel = 57)
case object LacqueredBuckler extends Shield(dropLevel = 60)
case object VaalBuckler extends Shield(dropLevel = 63)
case object CrusaderBuckler extends Shield(dropLevel = 66)
case object ImperialBuckler extends Shield(dropLevel = 69)

//ES
case object TwigSpiritShield extends Shield(dropLevel = 3)
case object YewSpiritShield extends Shield(dropLevel = 9)
case object BoneSpiritShield extends Shield(dropLevel = 15)
case object TarnishedSpiritShield extends Shield(dropLevel = 23)
case object JinglingSpiritShield extends Shield(dropLevel = 28)
case object BrassSpiritShield extends Shield(dropLevel = 33)
case object WalnutSpiritShield extends Shield(dropLevel = 37)
case object IvorySpiritShield extends Shield(dropLevel = 41)
case object AncientSpiritShield extends Shield(dropLevel = 45)
case object ChimingSpiritShield extends Shield(dropLevel = 49)
case object ThoriumSpiritShield extends Shield(dropLevel = 53)
case object LacewoodSpiritShield extends Shield(dropLevel = 56)
case object FossilisedSpiritShield extends Shield(dropLevel = 59)
case object VaalSpiritShield extends Shield(dropLevel = 62)
case object HarmonicSpiritShield extends Shield(dropLevel = 65)
case object TitaniumSpiritShield extends Shield(dropLevel = 68)

//Armour+Evasion
case object RottedRoundShield extends Shield(dropLevel = 5)
case object FirRoundShield extends Shield(dropLevel = 12)
case object StuddedRoundShield extends Shield(dropLevel = 20)
case object ScarletRoundShield extends Shield(dropLevel = 27)
case object SplendidRoundShield extends Shield(dropLevel = 33)
case object MapleRoundShield extends Shield(dropLevel = 39)
case object SpikedRoundShield extends Shield(dropLevel = 45)
case object CrimsonRoundShield extends Shield(dropLevel = 49)
case object BaroqueRoundShield extends Shield(dropLevel = 54)
case object TeakRoundShield extends Shield(dropLevel = 58)
case object SpinyRoundShield extends Shield(dropLevel = 62)
case object CardinalRoundShield extends Shield(dropLevel = 66)
case object ElegantRoundShield extends Shield(dropLevel = 70)

//Armour+ES
case object PlankKiteShield extends Shield(dropLevel = 7)
case object LindenKiteShield extends Shield(dropLevel = 13)
case object ReinforcedKiteShield extends Shield(dropLevel = 20)
case object LayeredKiteShield extends Shield(dropLevel = 27)
case object CeremonialKiteShield extends Shield(dropLevel = 34)
case object EtchedKiteShield extends Shield(dropLevel = 40)
case object SteelKiteShield extends Shield(dropLevel = 46)
case object LaminatedKiteShield extends Shield(dropLevel = 50)
case object AngelicKiteShield extends Shield(dropLevel = 55)
case object BrandedKiteShield extends Shield(dropLevel = 59)
case object ChampionKiteShield extends Shield(dropLevel = 62)
case object MosaicKiteShield extends Shield(dropLevel = 65)
case object ArchonKiteShield extends Shield(dropLevel = 68)

//Evasion+ES
case object SpikedBundle extends Shield(dropLevel = 5)
case object DriftwoodSpikedShield extends Shield(dropLevel = 12)
case object AlloyedSpikedShield extends Shield(dropLevel = 20)
case object BurnishedSpikedShield extends Shield(dropLevel = 27)
case object OrnateSpikedShield extends Shield(dropLevel = 33)
case object RedwoodSpikedShield extends Shield(dropLevel = 39)
case object CompoundSpikedShield extends Shield(dropLevel = 45)
case object PolishedSpikedShield extends Shield(dropLevel = 49)
case object SovereignSpikedShield extends Shield(dropLevel = 54)
case object AlderSpikedShield extends Shield(dropLevel = 58)
case object EzomyteSpikedShield extends Shield(dropLevel = 62)
case object MirroredSpikedShield extends Shield(dropLevel = 66)
case object SupremeSpikedShield extends Shield(dropLevel = 70)
